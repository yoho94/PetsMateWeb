<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.petsmate.mapper.chatMapper">

<insert id = "createRoom">
insert into CHATROOM (USER_user_id , DRIVER_USER_user_id, CLASS_class_id) 
values(#{USER_user_id}, #{TUTOR_USER_user_id} , #{CLASS_class_id} )


</insert>


<select id ="isRoom" resultType = "chatRoomVO">

select * from CHATROOM WHERE USER_user_id = #{USER_user_id} and DRIVER_USER_user_id = #{DRIVER_USER_user_id} 
and CLASS_class_id = #{CLASS_class_id} 
</select>

<insert id = "insertMessage">
insert into MESSAGE (message_sender , message_receiver, message_content, 
CHATROOM_chatroom_id, USER_user_id , TUTOR_USER_user_id, CLASS_class_id)
values (#{message_sender}, #{message_receiver}, #{message_content} , #{CHATROOM_chatroom_id} , #{USER_user_id},
#{TUTOR_USER_user_id} , #{CLASS_class_id})
</insert>

<select id = "getPartner" resultType = "messageVO">
SELECT USER_user_id from MESSAGE where TUTOR_USER_user_id = #{DRIVER_USER_user_id} and CLASS_class_id = #{CLASS_class_id}
</select>
<select id = "getProfile" resultType = "String">
select user_profileImagePath from USER WHERE user_id = #{user_id}
</select>

<select id = "getName" resultType = "String">
select user_name from USER where user_id = #{user_id}
</select>

<select id = "getMessageList" resultType = "messageVO">
select m.* , user_name, user_profileImagePath from MESSAGE m left outer join USER u on m.message_sender = u.user_id where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id}

</select>

<select id = "getRoomList" resultType = "chatRoomVO">
select * from CHATROOM where USER_user_id = #{USER_user_id}
</select>
<select id = "getRoomList2" resultType = "chatRoomVO">
select * from CHATROOM where DRIVER_USER_user_id = #{DRIVER_USER_user_id}
</select>

<select id = "getRecentMessage" resultType = "messageVO">

select m.* , class_name, class_id , DRIVER_tutor_id from MESSAGE m left outer join CLASS c on m.CLASS_class_id = c.class_id 
where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id} order by message_id desc limit 1;


</select>


<select id = "getTutorId" resultType = "String">
select driver_id from DRIVER where USER_user_id = #{USER_user_id}
</select>

<update id ="updateReadTime">
update MESSAGE set message_readTime = NOW() where DRIVER_USER_user_id = #{DRIVER_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = DRIVER_USER_user_id and USER_user_id = #{USER_user_id};
</update>
<update id ="updateReadTimeTutor">
update MESSAGE set message_readTime = NOW() where DRIVER_USER_user_id = #{DRIVER_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};

</update>


<select id = "getUnReadCount" resultType = "int">

select count(*) from MESSAGE where USER_user_id = #{USER_user_id} and TUTOR_USER_user_id = #{DRIVER_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = DRIVER_USER_user_id;

</select>
<select id = "getUnReadCountTutor" resultType = "int">

select count(*) from MESSAGE where DRIVER_USER_user_id =#{DRIVER_USER_user_id} and CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};

</select>

<select id = "getAllCount" resultType = "int">
select count(*) from MESSAGE WHERE (DRIVER_USER_user_id = #{DRIVER_USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}) or (USER_user_id = #{USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}); 

</select>
</mapper>
	
	<!-- mybatis-config.xml의 typeAlias에 등록해두지 않았다면 <select id="selectMember" 
		resultType="com.example.dto.MemberVO" > SELECT ID, PW ,NAME FROM TEST </select> 
		이렇게 해야 한다. -->
<!--  
	<select id="selectChat" resultType="chatVO">
		SELECT * FROM `CHAT`
	</select>

	<select id="selectOne" resultType="chatVO">
		SELECT * FROM `CHAT` WHERE CHATID=#{CHATID}
	</select>
	-->
	<!-- 삭제 -->
	<!--  -
	<delete id="delete">
		delete from 'CHAT'
		where CHATID = #{CHATID}
	
	</delete>
	-->
	<!-- 목록 -->
	<!--  
	<select id="list" resultType="chatVO">
		select CHATID, FROMID, TOID, CHATCONTENT,CHATTIME,TOKEN,
		from 'CHAT' order by CHATID 
	</select>
	
	<select id="getChatListByID">
		SELECT * FROM CHAT WHERE ((FROMID = #{FROMID} AND TOID = #{TOID}) OR  (FROMID = #{FROMID} AND TOID = #{TOID})) AND CHATID > #{CHATID} ORDER BY CHATTIME
	</select>
	 -->

	<!-- <select id="login" resultType="guestVO"> -->
	<!-- SELECT ID, PASSWORD, NAME, PHONE FROM `GUEST` WHERE ID=#{id} and PASSWORD=#{password} -->
	<!-- </select> -->

	<!-- <select id="signup"> -->
	<!-- INSERT INTO `GUEST`(ID, PASSWORD, NAME, PHONE) VALUES(#{id}, #{password}, 
		#{name}, #{phone}) -->
	<!-- </select> -->

	<!-- <select id="findId" resultType="guestVO"> -->
	<!-- SELECT ID, PASSWORD, NAME, PHONE FROM `GUEST` WHERE ID=#{id} -->
	<!-- </select> -->

